syntax = "proto2";
package decoder;


import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;

// HEP represents HEP packet
message HEP {
	required uint32 Version = 1 [(gogoproto.nullable) = false];
	required uint32 Protocol = 2 [(gogoproto.nullable) = false];
	required string SrcIP = 3 [(gogoproto.nullable) = false];
	required string DstIP = 4 [(gogoproto.nullable) = false];
	required uint32 SrcPort = 5 [(gogoproto.nullable) = false];
	required uint32 DstPort = 6 [(gogoproto.nullable) = false];
	required uint32 Tsec = 7 [(gogoproto.nullable) = false];
	required uint32 Tmsec = 8 [(gogoproto.nullable) = false];
	required uint32 ProtoType = 9 [(gogoproto.nullable) = false];
	required uint32 NodeID = 10 [(gogoproto.nullable) = false];
	required string NodePW = 11 [(gogoproto.nullable) = false];
	required string Payload = 12 [(gogoproto.nullable) = false];
	required string CID = 13 [(gogoproto.nullable) = false];
	required uint32 Vlan = 14 [(gogoproto.nullable) = false];
}


/* 
// HEP represents HEP packet
type HEP struct {
	Version   uint32 `protobuf:"varint,1,req,name=Version" json:"Version"`
	Protocol  uint32 `protobuf:"varint,2,req,name=Protocol" json:"Protocol"`
	SrcIP     string `protobuf:"bytes,3,req,name=SrcIP" json:"SrcIP"`
	DstIP     string `protobuf:"bytes,4,req,name=DstIP" json:"DstIP"`
	SrcPort   uint32 `protobuf:"varint,5,req,name=SrcPort" json:"SrcPort"`
	DstPort   uint32 `protobuf:"varint,6,req,name=DstPort" json:"DstPort"`
	Tsec      uint32 `protobuf:"varint,7,req,name=Tsec" json:"Tsec"`
	Tmsec     uint32 `protobuf:"varint,8,req,name=Tmsec" json:"Tmsec"`
	ProtoType uint32 `protobuf:"varint,9,req,name=ProtoType" json:"ProtoType"`
	NodeID    uint32 `protobuf:"varint,10,req,name=NodeID" json:"NodeID"`
	NodePW    string `protobuf:"bytes,11,req,name=NodePW" json:"NodePW"`
	Payload   string `protobuf:"bytes,12,req,name=Payload" json:"Payload"`
	CID       string `protobuf:"bytes,13,req,name=CID" json:"CID"`
	Vlan      uint32 `protobuf:"varint,14,req,name=Vlan" json:"Vlan"`
	NetSrcIP  net.IP
	NetDstIP  net.IP
	Timestamp time.Time
	SIP       *sipparser.SipMsg
}
 */